name: Archive_Create

on:
  push:
      branches: 
      - main
      
jobs:
  Release:
    name   : Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
              
    - name: Release
      id  : create_release
      uses: actions/create-release@v1
      env :
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Upload archive and binary files for uploading
          draft: false
          prerelease: false

  Archives:
    needs: Release
    runs-on: ubuntu-latest
    
    steps:
        
    - uses: actions/checkout@v1
    - name: Archive
      run : |
        mkdir cmake && cd cmake
        cmake -DGENERATOR=ARCHIVE ..
        make
        cpack -G ZIP
        cpack -G TGZ
        
        
    - name: ZIP_TO_RELEASE 
      uses: actions/upload-release-asset@v1
      env :
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
       upload_url: ${{ needs.Release.outputs.upload_url }}
       asset_path: ./cmake/solver-0.0.0-Linux.zip
       asset_name: Solver.zip
       asset_content_type: files/zip   
        
    - name: TGZ_TO_RELEASE
      uses: actions/upload-release-asset@v1
      env :
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with: 
       upload_url: ${{ needs.Release.outputs.upload_url }}
       asset_path: ./cmake/solver-0.0.0-Linux.tar.gz
       asset_name: Solver.tar.gz
       asset_content_type: files/tgz
       
  Binary_Files:
      needs: Release
      runs-on: ubuntu-latest
      
      steps:
      
      - uses: actions/checkout@v1
      
      - name: Prepare environment
        run : |
          sudo apt-get install rpm
          
      - name: Create_Binary_Files
        run : |
          mkdir cmake && cd cmake
          cmake -DGENERATOR=BINARY ..
          make
          cpack -G DEB
          cpack -G RPM

      - name: DEB_TO_RELEASE
      
        uses: actions/upload-release-asset@v1
        env :
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
         upload_url: ${{ needs.Release.outputs.upload_url }}
         asset_path: ./cmake/solver-0.0.0-Linux.deb
         asset_name: solver_app.deb
         asset_content_type: apps/deb

      - name: RPM_TO_RELEASE

        uses: actions/upload-release-asset@v1
        env :
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
         upload_url: ${{ needs.Release.outputs.upload_url }}
         asset_path: ./cmake/solver-0.0.0-Linux.rpm
         asset_name: solver_app.rpm
         asset_content_type: apps/rpm        
    
